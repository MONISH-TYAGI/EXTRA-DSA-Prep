class Solution {
    int size;
    int infected;
    public void DFS(int src,boolean[] vis,int []initial,int[][]graph)
    {
        if(vis[src]==true) return ;
        vis[src]=true;
        size++;
        if(Arrays.binarySearch(initial,src)>=0)
            infected++;
        for(int nbr=0;nbr<graph[src].length;nbr++)
        {
            if(graph[src][nbr]==1)
                DFS(nbr,vis,initial,graph);
                
        }
    }
    public int minMalwareSpread(int[][] graph, int[] initial) {
  Arrays.sort(initial);
        boolean []vis=new boolean[graph.length];
        int maxsize=0;
        int ans=initial[0];
      for(int src:initial)
      {
          infected=size=0;
          DFS(src,vis,initial,graph);
              if(size>maxsize&&infected==1)
              {
                  maxsize=size;
                  ans=src;
              }
      }
        return ans;
    }
}